run-name: Deploy

on:
  push:
    branches:
      - "main"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - uses: actions/setup-go@v4
        with:
          go-version: "^1.21" # The Go version to download (if necessary) and use.

      - name: Build the distribution binary
        run: go build -o "${GITHUB_REPOSITORY#*/}" ./
        env:
          CGO_ENABLED: 0

      - name: Compress distribution bundle
        run: tar -czvf release-bundle.tar.gz "${GITHUB_REPOSITORY#*/}"

      - name: Upload release bundle
        uses: actions/upload-artifact@v3
        with:
          name: release-bundle
          path: release-bundle.tar.gz

  push-image:
    needs: build
    runs-on: "ubuntu-latest"

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download release bundle
        uses: actions/download-artifact@v3
        with:
          name: "release-bundle"

      - name: Decompress distribution bundle
        run: |
          tar -xzvf release-bundle.tar.gz
          rm -f release-bundle.tar.gz

      - name: Build container image
        run: docker build --tag "${{ vars.GOOGLE_CLOUD_REGION }}-docker.pkg.dev/${{ vars.GOOGLE_CLOUD_PROJECT_ID }}/${{ vars.GOOGLE_CLOUD_IMAGE_REPOSITORY }}/${GITHUB_REPOSITORY#*/}:${GITHUB_SHA:0:7}" .

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: projects/${{ vars.GOOGLE_CLOUD_PROJECT_ID_NUMBER }}/locations/global/workloadIdentityPools/${{ vars.GOOGLE_CLOUD_WORKLOAD_IDENTITY_POOL_ID }}/providers/${{ vars.GOOGLE_CLOUD_WORKLOAD_IDENTITY_POOL_PROVIDER_ID }}
          service_account: ${{ vars.GOOGLE_CLOUD_SERVICE_ACCOUNT_ID }}@${{ vars.GOOGLE_CLOUD_PROJECT_ID }}.iam.gserviceaccount.com
          access_token_lifetime: 300s

      - name: Login to Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: "${{ vars.GOOGLE_CLOUD_REGION }}-docker.pkg.dev"
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Push image to Google Artifact Registry
        run: docker push "${{ vars.GOOGLE_CLOUD_REGION }}-docker.pkg.dev/${{ vars.GOOGLE_CLOUD_PROJECT_ID }}/${{ vars.GOOGLE_CLOUD_IMAGE_REPOSITORY }}/${GITHUB_REPOSITORY#*/}:${GITHUB_SHA:0:7}"

  apply:
    needs: push-image
    runs-on: ubuntu-latest

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: projects/${{ vars.GOOGLE_CLOUD_PROJECT_ID_NUMBER }}/locations/global/workloadIdentityPools/${{ vars.GOOGLE_CLOUD_WORKLOAD_IDENTITY_POOL_ID }}/providers/${{ vars.GOOGLE_CLOUD_WORKLOAD_IDENTITY_POOL_PROVIDER_ID }}
          service_account: ${{ vars.GOOGLE_CLOUD_SERVICE_ACCOUNT_ID }}@${{ vars.GOOGLE_CLOUD_PROJECT_ID }}.iam.gserviceaccount.com
          access_token_lifetime: 300s

      - uses: opentofu/setup-opentofu@v1

      - run: tofu init
        working-directory: .iac

      - run: |
          echo "repository=${GITHUB_REPOSITORY#*/}" >> "$GITHUB_ENV"
          echo "commit_hash=${GITHUB_SHA:0:7}" >> "$GITHUB_ENV"

      - run: tofu apply --auto-approve
        working-directory: .iac
        env:
          TF_VAR_project_id: ${{ vars.GOOGLE_CLOUD_PROJECT_ID }}
          TF_VAR_image_repository: ${{ vars.GOOGLE_CLOUD_IMAGE_REPOSITORY }}
          TF_VAR_image_name: ${{ env.repository }}
          TF_VAR_image_tag: ${{ env.commit_hash }}
          TF_VAR_secret_name: ${{ vars.SECRET_NAME }}
          TF_VAR_service_account_email: ${{ vars.SERVICE_ACCOUNT_EMAIL }}
